name: Apk Distribution Facetune China
env:
  KEY: release
  KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}
  KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
  ABI_FILTERS_OVERRIDE: armeabi-v7a:arm64-v8a
on:
  workflow_dispatch:
    inputs:
      buildBranch:
        description: 'From which branch the release is built'
        required: true
        default: 'develop'
      publish:
        description: 'Select where to publish this build, if successful. <p>archive - Saved under <code>/Artifacts/Facetune Android/</code> on skydive and <code>Lightriks/Tech/Artifacts/Facetune Android</code> on Google Drive. Any other value does not store'
        required: true
        default: 'archive'

jobs:
  facetune_distribution:
    name: "Facetune China for Android release builds"
    runs-on: android
    strategy:
      matrix:
        app_store: [huawei, bytedance_int, baidu, 360, tencent, xiaomi, oppo, universal, vivo]
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive
          # To access submodules in Lightricks repo, we need a personal access token
          token: ${{ secrets.GITHUBCIPAT }}
          ref: ${{github.event.inputs.buildBranch}}
      - name: Set technical version
        env:
          NUM: ${{ github.run_number }}
        run: echo TECHNICAL_VERSION=$(($NUM+1200)) >> $GITHUB_ENV
      - run: echo $TECHNICAL_VERSION
      - name: Set KEYSTORE
        run: echo 'KEYSTORE='`python3 tools/runner_provision/secret_file_utils.py text2bin SEC` >> $GITHUB_ENV
        env:
          SEC: ${{secrets.FACETUNE_KEYSTORE_BASE64}}
      - name: Gradle Clean
        run: ./gradlew clean
      - name: Gradle Bundle Release
        run: ./gradlew  :facetune:assembleChinaRelease
        env:
          STORE: ${{matrix.app_store}}
      - name: Archive files
        if: ${{contains(github.event.inputs.publish, 'archive')}}
        run: python3 tools/runner_provision/app_distribution_workflow/upload_to_artifactory.py facetune ${{matrix.app_store}} $TECHNICAL_VERSION
        env:
          ARTIFACTORY_ANDROID_API_KEY: ${{secrets.ARTIFACTORY_ANDROID_API_KEY}}
      - name: Cleanup
        if: ${{always()}}
        run: rm $KEYSTORE

