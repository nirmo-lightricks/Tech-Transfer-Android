name: App Distribution Pixaloop
env:
  KEY: release
  KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}
  KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
  ABI_FILTERS_OVERRIDE: armeabi-v7a:arm64-v8a
on:
  workflow_dispatch:
    inputs:
      buildBranch:
        description: 'From which branch the release is built'
        required: true
        default: 'develop'
      publish:
        # TODO: (nirmo) update description...
        description: >
          Select where to publish this build, if successful.
          archive - Saved under <code>/Artifacts/Facetune Android/</code> on skydive and
          <code>
            Lightriks/Tech/Artifacts/Facetune Android
          </code> on Google Drive.
          firebase - Uploaded to Firebase App Distribution. Suitable for internal distribution and testing.
        required: true
        # TODO: (nirmo) add google play.
        default: 'firebase,archive'
      firebaseAppDistributionGroups:
        description: >
          The tester groups you want to distribute builds to (see Manage testers in Firebase Console).
          Groups are specified using group aliases, which you can find in the Testers tab in the
          Firebase App Distribution console. You can specify the groups as a comma-separated list of group aliases.
        required: false
        default: 'internal-testers'

jobs:
  pixaloop_distribution:
    name: "Pixaloop for Android release builds"
    runs-on: android
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.2
        with:
          lfs: true
          submodules: recursive
          # To access submodules in Lightricks repo, we need a personal access token
          token: ${{ secrets.GITHUBCIPAT }}
          ref: ${{github.event.inputs.buildBranch}}

      # TODO(nirmo) make composite action.
      - name: Set technical version
        env:
          NUM: ${{ github.run_number }}
        run: echo ::set-env name=TECHNICAL_VERSION::$(($NUM+1200))
      - run: echo $TECHNICAL_VERSION

      # TODO(nirmo) combine with Firebase action...
      - name: Set FIREBASE_APPLICATION_CREDENTIALS
        run: echo '::set-env name=FIREBASE_APPLICATION_CREDENTIALS::'`python3 tools/runner_provision/secret_file_utils.py env2text SEC`
        env:
          SEC: ${{secrets.FACETUNE_FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT}}

      - name: Set KEYSTORE
        run: echo '::set-env name=KEYSTORE::'`python3 tools/runner_provision/secret_file_utils.py text2bin SEC`
        env:
          SEC: ${{secrets.FACETUNE_KEYSTORE_BASE64}}

      # TODO: (nirmo) is it required?
      - name: Gradle Clean
        run: ./gradlew clean

      - name: Gradle build APK in Release
        run: ./gradlew :pixaloop:assembleRelease

      # TODO(nirmo): should combine it with the archive thingy (new composite action).
      - name: Copy files to dist
        run: python3 tools/runner_provision/app_distribution_workflow/move_files_to_dist.py pixaloop $TECHNICAL_VERSION

      # Upload to firebase if needed.
      # TODO: (nirmo) change brach to develop before merging.

      - name: "Upload to FirebaseDistribution"
        uses: Lightricks/facetune-android/.github/actions/action-firebase-upload@githubactions/feature/composite_actions
        with:
          app: pixaloop

      # TODO (nirmo): Questions: TO where exactly these files are sent to?
      - name: Archive upload
        if: ${{contains(github.event.inputs.publish, 'archive')}}
        uses: actions/upload-artifact@v2
        with:
          name: android_binaries
          path: pixaloop/build/dist

      - name: Cleanup
        # TODO: (nirmo): why?
        if: ${{always()}}
        run: rm $KEYSTORE $FIREBASE_APPLICATION_CREDENTIALS

